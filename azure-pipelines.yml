trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- script: |
    go version
    go get -v -t -d ./...
    if [ -f Gopkg.toml ]; then
        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        dep ensure
    fi
    go build -v .
  workingDirectory: '$(modulePath)'
  displayName: 'Get dependencies, then build'

# - script: |
#     go test ./... -race --ci -timeout 30s
#   workingDirectory: '$(modulePath)'
#   displayName: 'Run tests'
#   env:
#     SPAUTH_SITEURL: $(ci.spo.siteurl)
#     SPAUTH_USERNAME: $(ci.spo.username)
#     SPAUTH_PASSWORD: $(ci.spo.password)
#     SPAUTH_CLIENTID: $(ci.spo.clientid)
#     SPAUTH_CLIENTSECRET: $(ci.spo.clientsecret)